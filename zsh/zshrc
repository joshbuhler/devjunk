# Copy to ~/.zshrc


## ----- Options ----- ##

# When typing a path, will automatically insert the `cd` at the beginning to switch to the new path
# Disabling for now though, as it was conflicting w/ commands that happened to be named the same as
# a directory. (e.g. Fastlane)
#setopt AUTO_CD

# Auto-correct commands if possible
setopt CORRECT
setopt CORRECT_ALL
CORRECT_IGNORE_FILE='.*'

## ----- History ----- #
# https://scriptingosx.com/2019/06/moving-to-zsh-part-3-shell-options/

# Where the history is stored
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history

# Share history across multiple zsh sessions
# setopt SHARE_HISTORY

# Append to history
setopt APPEND_HISTORY

# Adds commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY

# Expire duplicates first
setopt HIST_EXPIRE_DUPS_FIRST 

# Do not store duplications
setopt HIST_IGNORE_DUPS

# Ignore duplicates when searching
setopt HIST_FIND_NO_DUPS

# Removes blank lines from history
setopt HIST_REDUCE_BLANKS

# When using !! to auto-complete the last command run, this will only add the command, not run it. You'll still need to hit enter to run it.
setopt HIST_VERIFY


## ----- Aliases ----- ##

# Runs a carthage update. Use from the root of your project.
alias cupdate="carthage update --use-submodules --no-build"

# Clears the local Carthage files. Use from the root of your project.
alias cartclean="rm Cartfile.resolved; rm -rf Carthage"

# Clears the local Carthage files, then runs a carthage update. Use from the root of your project.
alias cartfull="cartclean; cupdate"

# Nukes the Carthage cache files. Use anywhere.
alias cartnuke="rm -rf ~/Library/Caches/org.carthage.CarthageKit"

# Shortcut for adding your SSH key to the Keychain.
#alias addSSHKey="ssh-add -K ~/.ssh/id_rsa; ssh-add -K ~/.ssh/id_rsa_extraKeys"

# Nukes the Xcode derived data. Use when Xcode is closed for best results.
alias nuke="rm -rf ~/Library/Developer/Xcode/DerivedData/"

# Nukes the Xcode symbolication cache info. Useful if crash symbolication is going screwy.
alias clearSymCache="sudo rm -rf /System/Library/Caches/com.apple.coresymbolicationd/"

# Cleans up the git mess left by a Carthage update
alias cartgit="git reset HEAD Carthage*; git reset HEAD .gitmodules"

# Scans a git repository and lists objects in it by size. You can then using something like BFG to cleanup the un-needed crud.
# Requires that you first `brew install coreutils`
# https://rtyley.github.io/bfg-repo-cleaner/
alias gitsize="git rev-list --objects --all |
  git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' |
  sed -n 's/^blob //p' |
  sort --numeric-sort --key=2 |
  gcut -c 1-12,41- |
  $(command -v gnumfmt || echo gnumfmt) --field=2 --to=iec-i --suffix=B --padding=7 --round=nearest"

# Fastlane
#export PATH="$HOME/.fastlane/bin:$PATH"

# Use Sublime Text as default editor
export EDITOR='subl -w'

# Powerline - https://github.com/b-ryan/powerline-shell
# function powerline_precmd() {
#     PS1="$(powerline-shell --shell zsh $?)"
# }

# function install_powerline_precmd() {
#   for s in "${precmd_functions[@]}"; do
#     if [ "$s" = "powerline_precmd" ]; then
#       return
#     fi
#   done
#   precmd_functions+=(powerline_precmd)
# }

# if [ "$TERM" != "linux" ]; then
#     install_powerline_precmd
# fi
